# This is a sample workflow, feel free to replace it with your source code
#
# This workflow does the following:
# - reads current time and date information from an external API and stores
#   the response in CurrentDateTime variable
# - retrieves a list of Wikipedia articles related to the day of the week
#   from CurrentDateTime
# - returns the list of articles as an output of the workflow
main:
  params: [args]
  steps:
    - initGetInvURLVar:
        assign:
          - GetInvURL: ${"http://{ipVM}:5000/products/" + args.pName}
    - checkInventory:
        call: http.get
        args:
          url: ${GetInvURL}
        result: GetInventoryRes
    - conditionalOnInventory:
        switch:
          - condition: ${args.quantity >  GetInventoryRes.body.quantity}
            next: rejectOrder
        next: acceptOrder
    - rejectOrder:
        return: ${"Sorry, we cannot meet your order. The available quantity for the product " + args.pName + " is " +  GetInventoryRes.body.quantity}
    - acceptOrder:
        call: order_completion_subprocess
        args:
          pName: ${args.pName}
          rQuantity: ${args.quantity}
        result: output
        next: return_message
    - return_message:
        return: ${output}

order_completion_subprocess:
  params: [pName, rQuantity]
  steps:
    - initUpdateInvURLVar:
        assign:
          - UpdateInvURL: ${"http://{ipVM}:5000/products/" + pName +"/quantity"}
    - updateInventory:
        call: http.request
        args:
          url: ${UpdateInvURL}
          method: PUT
          query:
            value: ${rQuantity}
        result: UpdateInventoryRes
    - createOrder:
        call: http.post
        args:
          url: http://{ipVM}:5001/orders/
          body:
            product_type: ${pName}
            quantity: ${rQuantity}
            unit_price: 444.50
        result: CreateOrderRes
    - return_order_complete_message:
        return: ${"An Order was accepted with id " + CreateOrderRes.body.id}
